#pragma checksum "C:\Users\naman\Downloads\Compressed\namanh108-nguyen-nam-anh-7b2b4cbf6975\my-only-project\Test2\Test2\Views\Menu\AdminList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cc9b4eb0922cb80eca1320b78ef0c9f529c3ffa0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Menu_AdminList), @"mvc.1.0.view", @"/Views/Menu/AdminList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\naman\Downloads\Compressed\namanh108-nguyen-nam-anh-7b2b4cbf6975\my-only-project\Test2\Test2\Views\_ViewImports.cshtml"
using Daihoc_FPT_News;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\naman\Downloads\Compressed\namanh108-nguyen-nam-anh-7b2b4cbf6975\my-only-project\Test2\Test2\Views\_ViewImports.cshtml"
using Daihoc_FPT_News.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cc9b4eb0922cb80eca1320b78ef0c9f529c3ffa0", @"/Views/Menu/AdminList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8d0920572bf03d2705c1affc844da3453f7db91f", @"/Views/_ViewImports.cshtml")]
    public class Views_Menu_AdminList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\naman\Downloads\Compressed\namanh108-nguyen-nam-anh-7b2b4cbf6975\my-only-project\Test2\Test2\Views\Menu\AdminList.cshtml"
  
    ViewData["Title"] = "Menu - Admin";
    Layout = "../Shared/_Layout - Admin"; 
    //Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""col-md-12"">
            <div class=""card"">
              <div class=""card-header"">
                <h4 class=""card-title""> Simple Table</h4>
                <button>Add</button>
              </div>
              <div class=""card-body"">
                <div class=""table-responsive"">
                  <table class=""table"" id=""tableData"">
                    <thead class="" text-primary"">
                      <tr><th>Index</th>
                                <th>ID</th>
                                <th>Parent ID</th>
                                <th>Độ ưu tiên</th>
                                <th>Vị trí hiển thị</th>
                                <th>Tên menu</th>
                                <th>Tên tiếng Anh</th>
                                <th>Mô tả</th>
                                <th>URL</th>
                                <th>URL2</th>
                                <th>Ngày tạo</th>

                                <th>Chi tiết</th>
         ");
            WriteLiteral(@"                       <th>Xóa</th>
                    </tr></thead>
                    <tbody>
                      
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>


<script>

    var hiddenItem = [""active""];
        var dataSource = [];
        var updatingItemID = 0;
        var tableUpdating = 0;
        var table;
    //load data
    $(document).ready(function () {
        loadData();
    })

    // calling ajax to load data
    function loadData() {
            $.ajax({
                url: ""/menu/api/list"",
                type: ""GET"",
                contentType: ""application/json"",
                success: function (responseData) {
                    // debugger;
                    var data = responseData.data;
                    dataSource = data;




                    data.forEach(function (item, index) {
                        // console.log(item, index);
      ");
            WriteLiteral(@"                  var rowContent = """";
                        rowContent += ""<td style='text-align: center;'>"" + (index + 1) + ""</td>"";
                        for (var key in item) {
                            if (item.hasOwnProperty(key)) {
                                // console.log(key + "" -> "" + item[key]);
                                debugger;
                                if (!hiddenItem.includes(key)) {
                                    if (key == ""groupID"") {
                                        if (item[key] == ""1"") {
                                            rowContent += ""<td class='row"" + item.id + ""-column column-"" + key + ""' property='"" + key + ""'>Main Menu</td>"";
                                        }
                                        else {
                                            rowContent += ""<td class='row"" + item.id + ""-column column-"" + key + ""' property='"" + key + ""'>Footer Menu</td>"";
                                        }
               ");
            WriteLiteral(@"                     }
                                    else {
                                        rowContent += ""<td class='row""+item.id+""-column column-""+key+""' property='""+key+""'>"" + item[key] + ""</td>"";
                                    }
                                }
                            }
                        }
                        rowContent += ""<td style='text-align: center;'><a onclick='editItem("" + item.id + "")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>"";
                        rowContent += ""<td style='text-align: center;'><a onclick='deleteItem("" + item.id + "")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>"";

                        var newRow = ""<tr id='row""+item.id+""' >"" + rowContent + ""</tr>"";
                        $(newRow).appendTo($(""#tableData tbody""));

                        // $(""#tableData #dummyRow"").after(""<tr id='row""+item.id+""' >"" + rowContent + ""</tr>"");
                    });

                ");
            WriteLiteral(@"    //Init datatable
                    if (tableUpdating === 0) {
                        initTable();
                    }

                    //update data with foreign key
                    updateTable();
                },
                error: function (e) {
                    //console.log(e.message);
                    initTable();
                }
            });
        }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
