@{
    ViewData["Title"] = "Menu - Admin";
    Layout = "../Shared/_Layout - Admin"; 
    //Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Latest compiled and minified JS -->
    @*<script src="https://code.jquery.com/jquery-3.5.1.js"></script>*@
 
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/33.0.0/classic/ckeditor.js"></script>
    

    <script>
        $(document).ready(function () {
            $('#example').DataTable({
                aLengthMenu: [
                [3, 5, 10, 20, 50, -1],
                [3, 5, 10, 20, 50, 'Tất cả']
            ]
            });
        });
    </script>
    <style>
        .modal-footer .btn + .btn {
            margin-bottom: 10px;
        }

        #example_wrapper {
            display : block;
        }

        /* Giao diện modal */
        input.fullwidth {
            width : 100%;
        }

        #closing-modal-black:hover {
            color :#333 !important;
        }

        .modal-row-menu {
            margin-top : 13px;
        }
    </style>

</head>

<body>
    <button onclick="window.location.href='/post/add/post'" style="width:100px;height:40px;background-color:lightgreen;border-color:white;float:right;margin-bottom:1%;">Add</button>
    <table id="example" class="display" style="width:100%;">
        <thead>
            <tr>
                <th>ID</th>
                <th>ParentID</th> 
                <th>Tên</th>
                <th>URL</th>
                <th>Chi tiết</th>
                <th>Xóa</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < ViewBag.MenuCount; i++)
            {
                <tr>
                    <td>@ViewBag.listMenu[i].Id</td>
                    <td>@ViewBag.listMenu[i].ParentId</td>
                    <td>@ViewBag.listMenu[i].Name</td>
                    <td>@ViewBag.listMenu[i].Url</td> 
                    <td><button onclick="Edit(@ViewBag.listMenu[i].Id)" data-toggle="modal" data-target="#modal-id">Sửa</button></td>
                    <td><button onclick="DeleteItem(@ViewBag.listMenu[i].Id)">Xóa</button></td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th>ID</th>
                <th>ParentID</th> 
                <th>Tên</th>
                <th>URL</th>
                <th>Chi tiết</th>
                <th>Xóa</th>
            </tr>
        </tfoot>
    </table>


    <div class="modal fade" id="modal-id">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-gradient-info">
                </div>
                <div class="modal-body">
                    <h3>Menu</h3>
                    <i>Lưu ý điền đầy đủ các thông tin có dấu <span style="color:red">*</span></i>
                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="menuId">ID</label><span style="color:red">*</span>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="menuId" class="fullwidth"  readonly />
                        </div>
                    </div>

                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="ParentID">ParentID</label><span style="color:red">*</span>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="ParentID" class="fullwidth" />
                        </div>
                    </div>

                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="">Active</label><span style="color:red">*</span> 
                        </div>
                        <div class="col-md-9">
                            <select id="Active">
                                <option value="1">Public</option>
                                <option value="0">Private</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="Name">Name</label><span style="color:red">*</span>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="Name"  class="fullwidth" />
                        </div>
                    </div>  
                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="Url">Url</label><span style="color:red">*</span>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="Url" class="fullwidth"  />
                        </div>
                    </div> 
                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="Description">Description</label>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="Description" class="fullwidth"   />
                        </div>
                    </div>
                    <div class="row modal-row-menu">
                        <div class="col-md-3 ">
                        <label for="">Published Time<span style="color:red">*</span></label>
                        </div>
                        <div class="col-md-9">
                            <input type="datetime-local" id="publishtime" />
                        </div>
                    </div> 
                     
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="closing-modal-black"
                            data-dismiss="modal" style="display : contents">
                        Close
                    </button>
                    <button type="button" class="btn btn-primary" id="btnUpdateItem" onclick="Submit()">
                        Save
                        changes
                    </button>
                </div>
            </div>
        </div>
    </div>
</body>

</html>
<script>
    
    async function Edit(id) {  
        // show modal details and load data by id
        $("#modal-id").show();
        let obj = await   getItemByID(id);
        debugger;
		 $("#menuId").val(obj[0].Id);

        //$('#postcategoryid').find('option').remove().end();
        //$('#posttypeid').find('option').remove().end();
        //$('#postlayoutid').find('option').remove().end();
        //LoadDataPostType();
        //LoadDataPostLayout();
        //LoadDataPostCategory();
        //var obj = await GetDetailItem(id);
        //$('#id').val(id);
        //$('#postcategoryid option[value=' + obj[0].PostCategoryID + ']').attr('selected', 'selected');
        //$('#posttypeid option[value=' + obj[0].PostTypeID + ']').attr('selected', 'selected');
        //$('#postlayoutid option[value=' + obj[0].PostLayoutID + ']').attr('selected', 'selected');
        //$('#postpublishid option[value=' + obj[0].PostPublishStatusID + ']').attr('selected', 'selected');
        //$('#postcommentstatusid option[value=' + obj[0].PostCommentStatusID + ']').attr('selected', 'selected');
        //posttext.setData(obj[0].Text);
        //$("#name").val(obj[0].Name);
        //if (obj[0].Photo != null) {
        //    $("#photo").val(obj[0].Photo);
        //} else {

        //}
        //if (obj[0].Video != null) {
        //    $("#video").val(obj[0].Video);
        //} else {

        //}
        //$("#url").val(obj[0].Url);
        //$("#description").val(obj[0].Description);
        //$("#publishtime").val(obj[0].PublishedTime);
    }

    async function getItemByID(id) {
        $.ajax({
            url: "/menu/api/list",
            type: "GET",
            async: 'true',
            contentType: "application/json",
            success: function (responseData) {
                // ajax lọc list menu trả về result là 1 row data theo ID
                var dataSource = responseData.data;
                const result = dataSource.find(item => parseInt(item.id) === id);

            },
            error: function (e) {

            }
        });
        }
</script>
<script>
    var posttext;
    ClassicEditor
        .create(document.querySelector('#editor'))
        .then(editor => {
            posttext = editor
        })
        .catch(error => {
            console.error(error);
        });


    function LoadDataPostType() {
        $.ajax({
            url: "https://localhost:5001/posttype/api/list",
            type: "GET",
            async: 'true',
            contentType: "application/json",
            success: function (responseData) {
                postLayoutData = JSON.parse(responseData);
                $.each(postLayoutData, function (index, item) {
                    var data = {
                        id: item.Id,
                        text: item.Name
                    };
                    var newOption = new Option(data.text, data.id, false, false);
                    $("#posttypeid").append(newOption).trigger('change');
                });
            },
            error: function (e) {

            }
        });
    }
    function LoadDataPostLayout() {
        $.ajax({
            url: "https://localhost:5001/postlayout/api/list",
            type: "GET",
            async: 'true',
            contentType: "application/json",
            success: function (responseData) {
                postLayoutData = JSON.parse(responseData);
                $.each(postLayoutData, function (index, item) {
                    var data = {
                        id: item.Id,
                        text: item.Name
                    };
                    var newOption = new Option(data.text, data.id, false, false);
                    $("#postlayoutid").append(newOption).trigger('change');
                });
            },
            error: function (e) {

            }
        });
    }
    function LoadDataPostCategory() {
        $.ajax({
            url: "https://localhost:5001/postcategory/api/list",
            type: "GET",
            async: 'true',
            contentType: 'application/json',
            success: function (responseData) {
                postcategorydata = JSON.parse(responseData);
                $.each(postcategorydata, function (index, item) {
                    var data = {
                        id: item.Id,
                        text: item.Name
                    };
                    var newOption = new Option(data.text, data.id, false, false);
                    $("#postcategoryid").append(newOption).trigger('change');
                });
            }
        })
    }
    
    function Submit() {
        Swal.fire({
            type: 'question',
            title: 'Confirm?',
            text: 'Do you want to edit this menu ?',
            showCloseButton: true,
            showCancelButton: true
        }).then((result) => {
            if (result.isConfirmed) {
                var data = posttext.getData();
                var obj = {
                    "ID": $("#id").val(),
                    "PostTypeID": $("#posttypeid").val(),
                    "PostAccountID": 10001,
                    "PostLayoutID": $("#postlayoutid").val(),
                    "PostPublishStatusID": $("#postpublishid").val(),
                    "PostCommentStatusID": $("#postcommentstatusid").val(),
                    "Active": 1,
                    "Url": $("#url").val(),
                    "Photo": $("#photo").val(),
                    "Video": $("#video").val(),
                    "Name": $("#name").val(),
                    "Description": $("#description").val(),
                    "Text": data,
                    "PublishedTime": $("#publishtime").val()
                }
                $.ajax({
                    url: "https://localhost:5001/menu/api/edit",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(obj),
                    success: function (responseData) {
                        Swal.fire({
                            type: 'confirm',
                            title: '<strong>Đã chỉnh sửa bài viết!</strong>',
                            showCloseButton: true,
                            focusConfirm: false,
                        });
                        location.reload();
                    }
                })
            } else if (result.isDenied) {

            }
        })
    }

    async function GetDetailItem(id) {
        return new Promise((resolve, reject) => {
            $.ajax({
                url: "https://localhost:5001/menu/api/detail/" + id,
                type: "GET",
                async: 'true',
                contentType: "application/json",
                success: function (responseData) {
                    Item = JSON.parse(responseData);
                    resolve(Item)
                },
                error: function (e) {
                    reject(e);
                }
            });
        })
    }


    async function DeleteItem(id) {
        Swal.fire({
            icon: 'question',
            title: 'Do you want to delete item',
            showCancelButton: true,
            showCloseButton: true
        }).then((result) => {
            if (result.isConfirmed) {
                var obj = await GetDetailItem(id);
                $.ajax({
                    url: "/menu/api/delete",
                    type: 'POST',
                    contentType: 'application/JSON',
                    data: JSON.stringify({ "id": id }),
                    success: function (responseData) {
                        Swal.fire('Deleted!',
                            'Item ' + obj.name + ' has been deleted.',
                            'success');
                        location.reload();
                    }
                })
            }
        })
    }
</script>
